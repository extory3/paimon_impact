{"ast":null,"code":"'use strict'; // From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\n\nvar _objectSpread = require(\"/home/madi/Documents/projects/genshin_impact/paimonreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar randomInteger = function randomInteger(minimum, maximum) {\n  return Math.floor(Math.random() * (maximum - minimum + 1) + minimum);\n};\n\nvar createAbortError = function createAbortError() {\n  var error = new Error('Delay aborted');\n  error.name = 'AbortError';\n  return error;\n};\n\nvar createDelay = function createDelay(_ref) {\n  var defaultClear = _ref.clearTimeout,\n      set = _ref.setTimeout,\n      willResolve = _ref.willResolve;\n  return function (ms) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        value = _ref2.value,\n        signal = _ref2.signal;\n\n    if (signal && signal.aborted) {\n      return Promise.reject(createAbortError());\n    }\n\n    var timeoutId;\n    var settle;\n    var rejectFn;\n    var clear = defaultClear || clearTimeout;\n\n    var signalListener = function signalListener() {\n      clear(timeoutId);\n      rejectFn(createAbortError());\n    };\n\n    var cleanup = function cleanup() {\n      if (signal) {\n        signal.removeEventListener('abort', signalListener);\n      }\n    };\n\n    var delayPromise = new Promise(function (resolve, reject) {\n      settle = function settle() {\n        cleanup();\n\n        if (willResolve) {\n          resolve(value);\n        } else {\n          reject(value);\n        }\n      };\n\n      rejectFn = reject;\n      timeoutId = (set || setTimeout)(settle, ms);\n    });\n\n    if (signal) {\n      signal.addEventListener('abort', signalListener, {\n        once: true\n      });\n    }\n\n    delayPromise.clear = function () {\n      clear(timeoutId);\n      timeoutId = null;\n      settle();\n    };\n\n    return delayPromise;\n  };\n};\n\nvar createWithTimers = function createWithTimers(clearAndSet) {\n  var delay = createDelay(_objectSpread(_objectSpread({}, clearAndSet), {}, {\n    willResolve: true\n  }));\n  delay.reject = createDelay(_objectSpread(_objectSpread({}, clearAndSet), {}, {\n    willResolve: false\n  }));\n\n  delay.range = function (minimum, maximum, options) {\n    return delay(randomInteger(minimum, maximum), options);\n  };\n\n  return delay;\n};\n\nvar delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\nmodule.exports = delay; // TODO: Remove this for the next major release\n\nmodule.exports.default = delay;","map":{"version":3,"sources":["/home/madi/node_modules/delay/index.js"],"names":["randomInteger","minimum","maximum","Math","floor","random","createAbortError","error","Error","name","createDelay","defaultClear","clearTimeout","set","setTimeout","willResolve","ms","value","signal","aborted","Promise","reject","timeoutId","settle","rejectFn","clear","signalListener","cleanup","removeEventListener","delayPromise","resolve","addEventListener","once","createWithTimers","clearAndSet","delay","range","options","module","exports","default"],"mappings":"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","sourcesContent":["'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n\tconst delay = createDelay({...clearAndSet, willResolve: true});\n\tdelay.reject = createDelay({...clearAndSet, willResolve: false});\n\tdelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\treturn delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n"]},"metadata":{},"sourceType":"script"}