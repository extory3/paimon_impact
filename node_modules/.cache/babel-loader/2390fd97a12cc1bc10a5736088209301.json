{"ast":null,"code":"import { jsx, useThemeUI, ThemeProvider } from '@theme-ui/core';\nimport { css } from '@theme-ui/css';\nimport { ColorModeProvider } from '@theme-ui/color-modes';\nimport { MDXProvider } from '@theme-ui/mdx';\nimport { Global } from '@emotion/core';\n\nvar BodyStyles = function () {\n  return jsx(Global, {\n    styles: function (theme) {\n      if (theme.useBodyStyles === false || theme.styles && !theme.styles.root) {\n        return false;\n      }\n\n      var boxSizing = theme.useBorderBox === false ? null : 'border-box';\n      return css({\n        '*': {\n          boxSizing: boxSizing\n        },\n        body: {\n          margin: 0,\n          variant: 'styles.root'\n        }\n      })(theme);\n    }\n  });\n};\n\nvar ThemeProvider$1 = function (ref) {\n  var theme = ref.theme;\n  var components = ref.components;\n  var children = ref.children;\n  var outer = useThemeUI();\n\n  if (typeof outer.setColorMode === 'function') {\n    return jsx(ThemeProvider, {\n      theme: theme\n    }, jsx(MDXProvider, {\n      components: components,\n      children: children\n    }));\n  }\n\n  return jsx(ThemeProvider, {\n    theme: theme\n  }, jsx(ColorModeProvider, null, jsx(BodyStyles), jsx(MDXProvider, {\n    components: components,\n    children: children\n  })));\n};\n\nexport { ThemeProvider$1 as ThemeProvider };","map":{"version":3,"sources":["../src/index.js"],"names":["const","BodyStyles","jsx","styles","theme","boxSizing","body","margin","variant","ThemeProvider","components","children","outer","useThemeUI"],"mappings":";;;;;;AAMAA,IAAMC,UAAU,GAAA,YAAA;AAAA,SACdC,GAAG,CAAA,MAAA,EAAS;AACVC,IAAAA,MAAM,EAAA,UAAEC,KAAF,EAAEA;UACFA,KAAK,CAALA,aAAAA,KAAAA,KAAAA,IAAkCA,KAAK,CAALA,MAAAA,IAAgB,CAACA,KAAK,CAALA,MAAAA,CAAvD,I,EAAA;AACE,eAAA,KAAA;AAAA;;UACIC,SAAS,GAAGD,KAAK,CAALA,YAAAA,KAAAA,KAAAA,GAAAA,IAAAA,GAAlB,Y;aAEO,GAAG,CAAC;aACJ;qBACHC;AADG,SADI;AAITC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EADF,CAAA;AAEJC,UAAAA,OAAO,EAAE;AAFL;AAJG,OAAD,CAAH,CAAP,KAAO,C;;AANC,GAAT,CADW;AAAhBR,CAAAA;;AAmBA,IAAaS,eAAa,GAAA,UAAG,GAAH,EAAG;kBAAUC,K;uBAAYC,U;;MAC3CC,KAAK,GAAGC,UAAd,E;;MAEI,OAAOD,KAAK,CAAZ,YAAA,KAAJ,U,EAA8C;WACrCV,GAAG,CAAA,aAAA,EAER;aAAEE;AAAF,KAFQ,EAGRF,GAAG,CAAA,WAAA,EAAc;kBAAA,UAAA;gBAEfS;AAFe,KAAd,CAHK,C;;;SAULT,GAAG,CAAA,aAAA,EAER;WAAEE;AAAF,GAFQ,EAGRF,GAAG,CAAA,iBAAA,EAAA,IAAA,EAGDA,GAAG,CAHF,UAGE,CAHF,EAIDA,GAAG,CAAA,WAAA,EAAc;gBAAA,UAAA;cAEfS;AAFe,GAAd,CAJF,CAHK,C;AAdL,CAAP","sourcesContent":["import { jsx, useThemeUI, ThemeProvider as CoreProvider } from '@theme-ui/core'\nimport { css } from '@theme-ui/css'\nimport { ColorModeProvider } from '@theme-ui/color-modes'\nimport { MDXProvider } from '@theme-ui/mdx'\nimport { Global } from '@emotion/core'\n\nconst BodyStyles = () =>\n  jsx(Global, {\n    styles: theme => {\n      if (theme.useBodyStyles === false || (theme.styles && !theme.styles.root))\n        return false\n      const boxSizing = theme.useBorderBox === false ? null : 'border-box'\n\n      return css({\n        '*': {\n          boxSizing,\n        },\n        body: {\n          margin: 0,\n          variant: 'styles.root',\n        },\n      })(theme)\n    },\n  })\n\nexport const ThemeProvider = ({ theme, components, children }) => {\n  const outer = useThemeUI()\n\n  if (typeof outer.setColorMode === 'function') {\n    return jsx(\n      CoreProvider,\n      { theme },\n      jsx(MDXProvider, {\n        components,\n        children,\n      })\n    )\n  }\n\n  return jsx(\n    CoreProvider,\n    { theme },\n    jsx(\n      ColorModeProvider,\n      null,\n      jsx(BodyStyles),\n      jsx(MDXProvider, {\n        components,\n        children,\n      })\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"module"}